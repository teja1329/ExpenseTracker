# --- build stage (Vite React) ---
FROM public.ecr.aws/docker/library/node:20-alpine AS build
WORKDIR /app

# Ensure npm installs devDependencies (vite)
ENV NODE_ENV=development
RUN npm config set production false

# Copy only manifests first for better layer cache
COPY package*.json ./

# Install deps (incl. dev); cache npm folder for speed if BuildKit is on
RUN npm ci --no-audit --no-fund

# Bring in the rest of the app
COPY . .

# Allow overriding API base at build time
ARG VITE_API_BASE
ENV VITE_API_BASE=${VITE_API_BASE}

# Use npx to run vite even if npmâ€™s local bin shim is odd
RUN npx --yes vite@5.4.8 build

# --- runtime stage (nginx) ---
FROM public.ecr.aws/docker/library/nginx:1.25-alpine

# Copy Vite build output
COPY --from=build /app/dist /usr/share/nginx/html

# React Router fallback
RUN sed -i 's/try_files $uri $uri\/ =404;/try_files $uri $uri\/ \/index.html;/' /etc/nginx/conf.d/default.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]

