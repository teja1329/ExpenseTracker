version: 0.2

env:
  variables:
    AWS_DEFAULT_REGION: ap-south-1
  parameter-store:
    # ===== Backend runtime/env values =====
    JWT_SECRET: "/expensetracker/JWT_SECRET"
    CORS_ORIGIN: "/expensetracker/CORS_ORIGIN"
    APP_ORIGIN: "/expensetracker/APP_ORIGIN"
    # ===== Frontend build env =====
    VITE_API_BASE: "/expensetracker/VITE_API_BASE"

phases:
  pre_build:
    commands:
      - echo "🔐 Logging in to ECR"
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - ECR_URI="${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${ECR_URI}
      - echo "🧾 Compute image tag from commit sha"
      - COMMIT_SHA=$(echo ${CODEBUILD_RESOLVED_SOURCE_VERSION:-latest} | cut -c1-7)
      - IMAGE_TAG=saiteja
      - echo "TAG=${IMAGE_TAG}"

  build:
    commands:
      - echo "🐳 Building backend image..."
      - docker build -f backend/Dockerfile -t backend:build --build-arg JWT_SECRET="$JWT_SECRET" --build-arg CORS_ORIGIN="$CORS_ORIGIN" --build-arg APP_ORIGIN="$APP_ORIGIN" backend
      - docker tag backend:build ${ECR_URI}/expense-tracker-backend:${IMAGE_TAG}

      - echo "🐳 Building frontend image..."
      - docker build -f infra/Dockerfile.frontend -t frontend:build --build-arg VITE_API_BASE="$VITE_API_BASE" frontend
      - docker tag frontend:build ${ECR_URI}/expense-tracker-frontend:${IMAGE_TAG}

  post_build:
    commands:
      - echo "📤 Pushing images to ECR..."
      - docker push ${ECR_URI}/expense-tracker-backend:${IMAGE_TAG}
      - docker push ${ECR_URI}/expense-tracker-frontend:${IMAGE_TAG}
      - echo "📝 Writing image manifest"
      - printf '{"backend":"%s","frontend":"%s"}' "${ECR_URI}/expense-tracker-backend:${IMAGE_TAG}" "${ECR_URI}/expense-tracker-frontend:${IMAGE_TAG}" > imagedigest.json

artifacts:
  files:
    - imagedigest.json
